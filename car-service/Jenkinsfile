pipeline {
  agent {
    kubernetes {
      yaml """
        kind: Pod
        spec:
          containers:
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            imagePullPolicy: Always
            command:
            - sleep
            args:
            - 9999999
            volumeMounts:
              - name: jenkins-docker-cfg
                mountPath: /kaniko/.docker
          - name: maven
            image: maven:alpine
            command:
            - cat
            tty: true
          volumes:
          - name: jenkins-docker-cfg
            projected:
              sources:
              - secret:
                  name: docker-credentials
                  items:
                    - key: .dockerconfigjson
                      path: config.json
        """
    }
  }
  stages {
    stage('Build and test with Maven'){
      steps{
        container(name: 'maven'){
          sh 'mvn clean package -DskipTests'
          sh 'ls -last'
        }
      }
    }
    stage('Build container image with Kaniko') {
      steps {
        container(name: 'kaniko', shell: '/busybox/sh') {
          sh '''#!/busybox/sh
            echo "FROM jenkins/inbound-agent:latest" > Dockerfile
            /kaniko/executor --context `pwd` --destination hakktastic/car-service:0.2.0-SNAPSHOT --customPlatform=linux/arm64
          '''
          sh 'ls -last'
        }
      }
    }
  }
}
